services:
  redis:
    image: redis:latest
    container_name: redis_cache
    restart: always
    ports:
      - "6379:6379"

  db:
    image: postgres:14
    container_name: postgres_db
    restart: always
    env_file:
      - .env.${ENV}
    environment:
      TZ: ${TZ}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    deploy:
      replicas: ${DB_REPLICAS:-1} 

  # frontend:
  #   build: ./frontend-DayriSense
  #   container_name: react_app
  #   depends_on:
  #     - backend
  #   volumes:
  #     - ./frontend:/app
  #   ports:
  #     - "8080:3000"
  #   command: ["npm", "start"]
  backend:
    build: ./backend-DairySense
    container_name: rails_api
    working_dir: /app
    stdin_open: true
    tty: true
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails server -b 0.0.0.0"
    depends_on:
     # - db
      - redis
    env_file:
      - .env.${ENV}
    volumes:
      - ./backend-DairySense:/app
    ports:
      - "3000:3000"

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    volumes:
      - ./nginx/default.${ENV}.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "5000:80"
    depends_on:
      - backend

  sidekiq:
    build: ./backend-DairySense
    container_name: sidekiq
    working_dir: /app
    depends_on:
      - redis
      - db
    env_file:
      - .env.${ENV}
    volumes:
      - ./backend-DairySense:/app
    command: "bundle exec sidekiq -r ./config/environment.rb -C config/sidekiq.yml"
